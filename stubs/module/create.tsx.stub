import { Button } from '@/components/ui/button';
import { BreadcrumbItem, {{SingularUcfirst}}FormData } from '@/types';
import { Head, router, useForm } from '@inertiajs/react';
import { Loader2 } from 'lucide-react';
import React, { useEffect } from 'react';
import { useTranslation } from 'react-i18next';

import { Form, FormInput, FormLabel, FormMessage, FormTextarea } from '@/components/form';
{{DynamicImports}}
import { usePageActions } from '@/contexts/page-context';
// Note: Using direct Inertia router calls instead of action creators

// Page props type would be defined only if needed
// Removed empty interface to avoid TypeScript warnings

export default function Create() {
    const { t } = useTranslation();
    const { setBreadcrumbs } = usePageActions();

    const breadcrumbs: BreadcrumbItem[] = React.useMemo(
        () => [
            {
                title: '{{PluralTitleCase}}',
                count: 2,
                href: route('{{plural_kebab_name}}.index'),
            },
            {
                title: t('Create'),
                href: route('{{plural_kebab_name}}.create'),
            },
        ],
        [t]
    );

    useEffect(() => {
        setBreadcrumbs(breadcrumbs);
    }, [breadcrumbs, setBreadcrumbs]);

    const form = useForm<{{SingularUcfirst}}FormData>({
        {{FormDefaultValues}}
    });

    function onSubmit(e: React.FormEvent<HTMLFormElement>) {
        e.preventDefault();
        router.post(route('{{plural_kebab_name}}.store'), form.data);
    }

    return (
        <>
            <Head title={t('Create {{SingularUcfirst}}')} />

            <div className="max-w-3xl">
                <h2 className="mb-6 text-xl font-semibold">{t('Create {{SingularUcfirst}}')}</h2>

                <Form onSubmit={onSubmit}>
                    <div className="space-y-6">
                        {{FormFields}}

                        <div className="flex justify-end">
                            <Button type="submit" disabled={form.processing}>
                                {form.processing && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                                {t('Create {{SingularUcfirst}}')}
                            </Button>
                        </div>
                    </div>
                </Form>
            </div>
        </>
    );
}